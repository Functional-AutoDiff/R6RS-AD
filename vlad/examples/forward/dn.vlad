(include "math")

(define (dn-using-j* n f)
 (if (zero? n) f (dn-using-j* (- n 1) (derivative-using-j* f))))

((dn-using-j* 0 exp) 4)
((dn-using-j* 1 exp) 4)
((dn-using-j* 2 exp) 4)
((dn-using-j* 3 exp) 4)
((dn-using-j* 4 exp) 4)
((dn-using-j* 5 exp) 4)
((dn-using-j* 6 exp) 4)
((dn-using-j* 7 exp) 4)

((dn-using-j* 0 sin) 0)
((dn-using-j* 1 sin) 0)
((dn-using-j* 2 sin) 0)
((dn-using-j* 3 sin) 0)
((dn-using-j* 4 sin) 0)
((dn-using-j* 5 sin) 0)
((dn-using-j* 6 sin) 0)
((dn-using-j* 7 sin) 0)

((dn-using-j* 0 cos) 0)
((dn-using-j* 1 cos) 0)
((dn-using-j* 2 cos) 0)
((dn-using-j* 3 cos) 0)
((dn-using-j* 4 cos) 0)
((dn-using-j* 5 cos) 0)
((dn-using-j* 6 cos) 0)
((dn-using-j* 7 cos) 0)
