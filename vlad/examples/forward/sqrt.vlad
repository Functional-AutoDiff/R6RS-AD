(include "math")

(define (nr-sqrt x)
 (letrec ((loop (lambda (y)
		 (let ((y-prime (- y (/ (- (* y y) x) (+ y y)))))
		  (if (<= (abs (- y y-prime)) 1e-5)
		      y
		      (loop y-prime))))))
  (loop 1)))

(sqrt 4)

(nr-sqrt 4)

((derivative-using-j* sqrt) 4)

((derivative-using-j* nr-sqrt) 4)
