(define (cdr (cons x y)) y)

(define (cadr (cons* x y z)) y)

(define ((derivative-using-*j f) x) (cadr (*j f x 1)))

((derivative-using-*j
  (let ((g (lambda (b) (lambda (c) b)))) (lambda (a) ((g 1) 1))))
 4)

((derivative-using-*j
  (let ((g (lambda (b) (lambda (c) b)))) (lambda (a) ((g a) 1))))
 4)

((derivative-using-*j
  (let ((g (lambda (b) (lambda (c) b))))
   (let ((h (lambda (p) (+ (p 1) (p 1)))))
    (lambda (a) (h (g a))))))
 4)
